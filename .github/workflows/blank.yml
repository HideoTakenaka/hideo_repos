# This is a basic workflow to help you get started with Actions

name: FM-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

   
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
   env_1 : uploadtest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: My CI
    outputs:
      checkout_done: ${{ steps.checkout.outputs.checkout_done }}
      upload_done:   ${{ steps.check.outputs.checkout_done }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: checkout
      - id: checkout
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: step1 #Run a one-line script
        run: |
          echo "this is env=${{ env.env_1 }}"
          echo "attempt1=${{ github.run_attempt }}"

      - name: step2
        id: step2
#       continue-on-error: true
#      - id: step2
        run: |
         echo "ENV_2=test0001">> $GITHUB_ENV
         bash ${{ env.env_1 }}/test.sh
#         bash uploadtest/test.sh
#         bash test.sh
 #       with:
#          uploadtest
#         bash ${{ env.env_1 }}"/test.sh
#         shell: bash
        # chmod +x uploadtest/test.sh
#        shell: bash
#         sh uploadtest/test.sh
#         echo `ls -la`
     #   echo "attempt2=${{ github.run_attempt }}"
     #   if: steps.checkout_done.outcome == 'success'

      - name: step3
        id: upload
 #      continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
         name: "fm_ci_${{ github.workflow }}"
         path: uploadtest22222222
         retention-days: 2
#         name: "fm_ci_${{ github.run_id }}"

        

      # Runs a set of commands using the runners shell
      - name: step4
        env:
         STATE: ${{ (steps.checkout.outcome) }}
#      - name: Run a multi-line script
        run: | 
        if: success()
          echo "checkout= ${{ (steps.checkout.outcome) }}"
          echo "step2=${{ (steps.step2.outcome) }}"
          echo "step3=${{ (steps.upload.outcome) }}"
          echo "${{ (job.status) }}" 
          echo "${{ (job.status == 'success') }}" 
          echo "${{ (job.status == 'success' && 'good') }}" 
          echo "${{ (job.status == 'success' && 'good') || 'danger' }}" 
          echo "${{ (job.status == 'AAA' && 'good') || 'danger' }}" 
          echo "(${{ (steps.checkout.outcome) }} == 'success' && 'good') || 'danger'" 
          echo "${{ ( steps.step2.outcome == 'success' && 'good') || 'danger' }}" 
          echo "${{ ( (steps.checkout.outcome == 'success' &&  steps.step2.outcome == 'success' ) && 'good') || 'danger' }}" 
          echo "done=CheckOut ${{ (job.status) }}" 


      - name: step5
        env:
         STATE: ${{ (steps.checkout.outcome) }}
        run: |
      - if: success()
         echo "step5 start"
         echo "step5 end"


#          echo "${{ ( (${{ steps.checkout.outcome }} == 'success') && (${{ steps.step2.outcome }} == 'success') )  && 'good') || 'danger' }}"                  }}
          
          
#          echo "last is env=${{ env.env_1 }}"
#          echo "last2 is env=$ENV_2"
#          echo "branch name=${{ github.ref_name }}"
#          echo "attempt3=${{ github.run_attempt }}"
          
          
       # echo Add other actions to build,
       # echo test, and deploy your project.
       # echo "checkout_done=CheckOut ${{ (steps.checkout.outcome == 'SUCESS') }}"
      
